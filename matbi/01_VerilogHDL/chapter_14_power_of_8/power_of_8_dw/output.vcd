$date
	Fri Feb 26 09:43:09 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_power_of_8_dw $end
$var wire 32 ! o_value [31:0] $end
$var reg 1 " clk $end
$var reg 32 # i_value [31:0] $end
$var reg 1 $ reset_n $end
$var integer 32 % i [31:0] $end
$scope module u_power_of_8_dw $end
$var wire 1 " clk $end
$var wire 32 & i_value [31:0] $end
$var wire 32 ' o_value [31:0] $end
$var wire 1 $ reset_n $end
$var wire 32 ( power_of_4 [31:0] $end
$var wire 32 ) power_of_2 [31:0] $end
$var reg 32 * r_power_of_2 [31:0] $end
$var reg 32 + r_power_of_4 [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
bx *
bx )
bx (
bx '
bx &
b0 %
1$
bx #
0"
bx !
$end
#5
1"
#10
b0 !
b0 '
b0 (
b0 +
b0 )
b0 *
b0 #
b0 &
0"
0$
#15
1"
#20
0"
1$
#25
1"
#30
0"
#35
b1 %
1"
#40
0"
#45
b1 #
b1 &
b10 %
1"
#50
0"
#55
b1 )
b1 *
b10 #
b10 &
b11 %
1"
#60
0"
#65
b1 !
b1 '
b1 (
b1 +
b100 )
b10 *
b11 #
b11 &
b100 %
1"
#70
0"
#75
b10000 !
b10000 '
b10000 (
b100 +
b1001 )
b11 *
b100 #
b100 &
b101 %
1"
#80
0"
#85
b1010001 !
b1010001 '
b1010001 (
b1001 +
b10000 )
b100 *
b101 #
b101 &
b110 %
1"
#90
0"
#95
b100000000 !
b100000000 '
b100000000 (
b10000 +
b11001 )
b101 *
b110 #
b110 &
b111 %
1"
#100
0"
#105
b1001110001 !
b1001110001 '
b1001110001 (
b11001 +
b100100 )
b110 *
b111 #
b111 &
b1000 %
1"
#110
0"
#115
b10100010000 !
b10100010000 '
b10100010000 (
b100100 +
b110001 )
b111 *
b1000 #
b1000 &
b1001 %
1"
#120
0"
#125
b100101100001 !
b100101100001 '
b100101100001 (
b110001 +
b1000000 )
b1000 *
b1001 #
b1001 &
b1010 %
1"
#130
0"
#135
b1000000000000 !
b1000000000000 '
b1000000000000 (
b1000000 +
b1010001 )
b1001 *
1"
#140
0"
#145
b1100110100001 !
b1100110100001 '
b1100110100001 (
b1010001 +
1"
#150
0"
#155
1"
#160
0"
#165
1"
#170
0"
#175
1"
#180
0"
#185
1"
#190
0"
#195
1"
#200
0"
#205
1"
#210
0"
#215
1"
#220
0"
#225
1"
